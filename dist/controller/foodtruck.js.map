{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","Foodtruck","name","body","newRest","save","err","send","json","message","get","find","foodtruck","findById","params","id","put","delete","remove","_id"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;;;kBAEe,gBAAkB;AAAA,QAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,QAARC,EAAQ,QAARA,EAAQ;;AAC7B,QAAIC,MAAM,sBAAV;;AAEA;AACA;AACAA,QAAIC,IAAJ,CAAS,MAAT,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,YAAIC,eAAe,IAAIC,SAAJ,EAAnB;AACAD,qBAAaE,IAAb,GAAoBJ,IAAIK,IAAJ,CAASD,IAA7B;;AAEAE,gBAAQC,IAAR,CAAa,eAAO;AAChB,gBAAIC,GAAJ,EAAS;AACLP,oBAAIQ,IAAJ,CAASD,GAAT;AACH;AACDP,gBAAIS,IAAJ,CAAS,EAACC,SAAS,iBAAV,EAAT;AAEH,SAND;AAQH,KAZD;;AAcA;AACAb,QAAIc,GAAJ,CAAQ,GAAR,EAAa,UAACZ,GAAD,EAAMC,GAAN,EAAc;AACvBE,kBAAUU,IAAV,CAAe,EAAf,EAAmB,UAACL,GAAD,EAAMM,SAAN,EAAoB;AACnC,gBAAIN,GAAJ,EAAS;AACLP,oBAAIQ,IAAJ,CAASD,GAAT;AACH;AACDP,gBAAIS,IAAJ,CAASI,SAAT;AAEH,SAND;AAOH,KARD;;AAUA;;AAEAhB,QAAIc,GAAJ,CAAQ,MAAR,EAAgB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAC1BE,kBAAUY,QAAV,CAAmBf,IAAIgB,MAAJ,CAAWC,EAA9B,EAAkC,UAACT,GAAD,EAAMM,SAAN,EAAoB;AAClD,gBAAIN,GAAJ,EAAS;AACLP,oBAAIQ,IAAJ,CAASD,GAAT;AACH;AACDP,gBAAIS,IAAJ,CAASI,SAAT;AAEH,SAND;AAOH,KARD;;AAUA;AACAhB,QAAIoB,GAAJ,CAAQ,MAAR,EAAgB,UAAClB,GAAD,EAAMC,GAAN,EAAc;;AAE1BE,kBAAUY,QAAV,CAAmBf,IAAIgB,MAAJ,CAAWC,EAA9B,EAAkC,UAACT,GAAD,EAAMM,SAAN,EAAoB;AAClD,gBAAIN,GAAJ,EAAS;AACLP,oBAAIQ,IAAJ,CAASD,GAAT;AACH;AACDM,sBAAUV,IAAV,GAAiBJ,IAAIK,IAAJ,CAASD,IAA1B;AACAU,sBAAUP,IAAV,CAAe,eAAO;AAClB,oBAAIC,GAAJ,EAAS;AACLP,wBAAIQ,IAAJ,CAASD,GAAT;AACH;AACDP,oBAAIS,IAAJ,CAAS,EAACC,SAAS,wBAAV,EAAT;AACH,aALD;AAMH,SAXD;AAcH,KAhBD;;AAkBAb,QAAIqB,MAAJ,CAAW,MAAX,EAAmB,UAACnB,GAAD,EAAMC,GAAN,EAAc;AAC7BE,kBAAUiB,MAAV,CAAiB;AACbC,iBAAKrB,IAAIgB,MAAJ,CAAWC;;AADH,SAAjB,EAIG,UAACT,GAAD,EAAMM,SAAN,EAAoB;AACnB,gBAAIN,GAAJ,EAAS;AACLP,oBAAIQ,IAAJ,CAASD,GAAT;AACH;AACDP,gBAAIS,IAAJ,CAAS,EAACC,SAAS,mBAAV,EAAT;AACH,SATD;AAUH,KAXD;;AAcA,WAAOb,GAAP;AAEH,C","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport {Router} from 'express';\nimport FoodTruck from '../model/foodtruck';\n\nexport default ({config, db}) => {\n    let api = Router();\n\n    //CRUD read,update,delete\n    // Create\n    api.post('/add', (req, res) => {\n        let newFoodTruck = new Foodtruck();\n        newFoodTruck.name = req.body.name;\n\n        newRest.save(err => {\n            if (err) {\n                res.send(err);\n            }\n            res.json({message: 'Foodtruck saved'});\n\n        });\n\n    });\n\n    // read all reastaurants\n    api.get('/', (req, res) => {\n        Foodtruck.find({}, (err, foodtruck) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(foodtruck);\n\n        });\n    });\n\n    // /v1/foodtruck/:id Read one foodtruck\n\n    api.get('/:id', (req, res) => {\n        Foodtruck.findById(req.params.id, (err, foodtruck) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(foodtruck);\n\n        });\n    });\n\n    //update /v1/foodtruck/:id -Update\n    api.put('/:id', (req, res) => {\n\n        Foodtruck.findById(req.params.id, (err, foodtruck) => {\n            if (err) {\n                res.send(err);\n            }\n            foodtruck.name = req.body.name;\n            foodtruck.save(err => {\n                if (err) {\n                    res.send(err);\n                }\n                res.json({message: \"Foodtruck info updated\"});\n            });\n        });\n\n\n    });\n\n    api.delete('/:id', (req, res) => {\n        Foodtruck.remove({\n            _id: req.params.id\n\n\n        }, (err, foodtruck) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json({message: \"Foodtruck removed\"});\n        });\n    });\n\n\n    return api;\n\n}"]}